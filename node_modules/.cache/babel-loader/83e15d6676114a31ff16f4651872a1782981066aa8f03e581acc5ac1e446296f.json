{"ast":null,"code":"var _jsxFileName = \"/Users/j.necta/Projects/necta/echo-exchange/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\n// ChatWindow component\nimport React, { useState } from \"react\";\nimport { Button, Input, Container, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const placeholderConversation = Array.from({\n    length: 5\n  }, (_, i) => ({\n    id: i,\n    sender: i % 2 === 0 ? \"Person Name 1\" : \"Person Name 2\",\n    message: `This is a very long placeholder message for testing the chat window. This is message ${i + 1}. Here's some more text to make sure we are testing the boundaries.`\n  }));\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSend = () => {\n    // handle send message\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [placeholderConversation.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: item.sender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-end\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"10\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: message,\n          onChange: handleChange,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          onClick: handleSend,\n          block: true,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","Button","Input","Container","Row","Col","jsxDEV","_jsxDEV","ChatWindow","_s","message","setMessage","placeholderConversation","Array","from","length","_","i","id","sender","handleChange","event","target","value","handleSend","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","className","xs","type","onChange","placeholder","color","onClick","block","_c","$RefreshReg$"],"sources":["/Users/j.necta/Projects/necta/echo-exchange/src/components/ChatWindow.js"],"sourcesContent":["// ChatWindow component\nimport React, { useState } from \"react\";\nimport { Button, Input, Container, Row, Col } from \"reactstrap\";\n\nconst ChatWindow = () => {\n  const [message, setMessage] = useState(\"\");\n\n  const placeholderConversation = Array.from({ length: 5 }, (_, i) => ({\n    id: i,\n    sender: i % 2 === 0 ? \"Person Name 1\" : \"Person Name 2\",\n    message: `This is a very long placeholder message for testing the chat window. This is message ${\n      i + 1\n    }. Here's some more text to make sure we are testing the boundaries.`,\n  }));\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSend = () => {\n    // handle send message\n    setMessage(\"\");\n  };\n\n  return (\n    <Container>\n      {placeholderConversation.map((item) => (\n        <div key={item.id}>\n          <strong>{item.sender}</strong>\n          <p>{item.message}</p>\n        </div>\n      ))}\n      <Row className='align-items-end'>\n        <Col xs='10'>\n          <Input\n            type='text'\n            value={message}\n            onChange={handleChange}\n            placeholder='Type a message...'\n          />\n        </Col>\n        <Col xs='2'>\n          <Button color='warning' onClick={handleSend} block>\n            Send\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,uBAAuB,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;IACnEC,EAAE,EAAED,CAAC;IACLE,MAAM,EAAEF,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,eAAe,GAAG,eAAe;IACvDP,OAAO,EAAG,wFACRO,CAAC,GAAG,CACL;EACH,CAAC,CAAC,CAAC;EAEH,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC9BV,UAAU,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAb,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA,CAACJ,SAAS;IAAAsB,QAAA,GACPb,uBAAuB,CAACc,GAAG,CAAEC,IAAI,iBAChCpB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAASE,IAAI,CAACR;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC9BxB,OAAA;QAAAkB,QAAA,EAAIE,IAAI,CAACjB;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFbJ,IAAI,CAACT,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN,CAAC,eACFxB,OAAA,CAACH,GAAG;MAAC4B,SAAS,EAAC,iBAAiB;MAAAP,QAAA,gBAC9BlB,OAAA,CAACF,GAAG;QAAC4B,EAAE,EAAC,IAAI;QAAAR,QAAA,eACVlB,OAAA,CAACL,KAAK;UACJgC,IAAI,EAAC,MAAM;UACXX,KAAK,EAAEb,OAAQ;UACfyB,QAAQ,EAAEf,YAAa;UACvBgB,WAAW,EAAC;QAAmB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxB,OAAA,CAACF,GAAG;QAAC4B,EAAE,EAAC,GAAG;QAAAR,QAAA,eACTlB,OAAA,CAACN,MAAM;UAACoC,KAAK,EAAC,SAAS;UAACC,OAAO,EAAEd,UAAW;UAACe,KAAK;UAAAd,QAAA,EAAC;QAEnD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACtB,EAAA,CA7CID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}