{"ast":null,"code":"var _jsxFileName = \"/Users/j.necta/Projects/necta/echo-exchange/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Input, Container, Row, Col } from \"reactstrap\";\nimport \"./ChatWindow.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const placeholderConversation = Array.from({\n    length: 5\n  }, (_, i) => ({\n    id: i,\n    sender: i % 2 === 0 ? \"Person Name 1\" : \"Person Name 2\",\n    message: `This is a very long placeholder message for testing the chat window. This is message ${i + 1}. Here's some more text to make sure we are testing the boundaries.`\n  }));\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSend = () => {\n    // handle send message\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"chatWindow\",\n    children: [placeholderConversation.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"sender\",\n        children: item.sender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"messageText\",\n        children: item.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"inputRow\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"9\",\n        sm: \"10\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: message,\n          onChange: handleChange,\n          placeholder: \"Type a message...\",\n          className: \"messageInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"3\",\n        sm: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          onClick: handleSend,\n          block: true,\n          className: \"sendButton\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","Button","Input","Container","Row","Col","jsxDEV","_jsxDEV","ChatWindow","_s","message","setMessage","placeholderConversation","Array","from","length","_","i","id","sender","handleChange","event","target","value","handleSend","className","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","xs","sm","type","onChange","placeholder","color","onClick","block","_c","$RefreshReg$"],"sources":["/Users/j.necta/Projects/necta/echo-exchange/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input, Container, Row, Col } from \"reactstrap\";\nimport \"./ChatWindow.module.css\";\n\nconst ChatWindow = () => {\n  const [message, setMessage] = useState(\"\");\n\n  const placeholderConversation = Array.from({ length: 5 }, (_, i) => ({\n    id: i,\n    sender: i % 2 === 0 ? \"Person Name 1\" : \"Person Name 2\",\n    message: `This is a very long placeholder message for testing the chat window. This is message ${\n      i + 1\n    }. Here's some more text to make sure we are testing the boundaries.`,\n  }));\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSend = () => {\n    // handle send message\n    setMessage(\"\");\n  };\n\n  return (\n    <Container className='chatWindow'>\n      {placeholderConversation.map((item) => (\n        <div key={item.id} className='messageBlock'>\n          <strong className='sender'>{item.sender}</strong>\n          <p className='messageText'>{item.message}</p>\n        </div>\n      ))}\n      <Row className='inputRow'>\n        <Col xs='9' sm='10'>\n          <Input\n            type='text'\n            value={message}\n            onChange={handleChange}\n            placeholder='Type a message...'\n            className='messageInput'\n          />\n        </Col>\n        <Col xs='3' sm='2'>\n          <Button\n            color='warning'\n            onClick={handleSend}\n            block\n            className='sendButton'\n          >\n            Send\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}